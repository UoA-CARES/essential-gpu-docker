# 1. install ubuntu
# 2. Additional Drivers -> Choose 'Using NVIDIA driver metapackage from nvidia-driver-510(proprietary)' -> reboot
# 3. install openssh-server
sudo apt install openssh-server
sudo systemctl status ssh

# 4. install nvidia-docker
sudo apt install curl
bash <(curl -Ls https://gist.githubusercontent.com/jlim262/779f5f63353016c3c7d744f128fc7a77/raw/eecf9c0648fd5e301064bf759c26c3231ef59e3c/nvidia_docker_install.sh)

# 5. join the swarm


# 6. add user
sudo adduser myuser1 --gecos "myuser1,RoomNumber,WorkPhone,HomePhone" --disabled-password
echo "myuser1:pass1" | sudo chpasswd
sudo mkdir -p /home/myuser1/workspace
sudo chown -R myuser1:myuser1 /home/myuser1/workspace
sudo chmod 777 /home/myuser1/workspace
sudo usermod -aG sudo myuser1

sudo adduser myuser2 --gecos "myuser2,RoomNumber,WorkPhone,HomePhone" --disabled-password
echo "myuser2:pass2" | sudo chpasswd
sudo mkdir -p /home/myuser2/workspace
sudo chown -R myuser2:myuser2 /home/myuser2/workspace
sudo chmod 777 /home/myuser2/workspace
sudo usermod -aG sudo myuser2

sudo adduser myuser3 --gecos "myuser3,RoomNumber,WorkPhone,HomePhone" --disabled-password
echo "myuser3:pass3" | sudo chpasswd
sudo mkdir -p /home/myuser3/workspace
sudo chown -R myuser3:myuser3 /home/myuser3/workspace
sudo chmod 777 /home/myuser3/workspace
sudo usermod -aG sudo myuser3

sudo adduser myuser4 --gecos "myuser4,RoomNumber,WorkPhone,HomePhone" --disabled-password
echo "myuser4:pass4" | sudo chpasswd
sudo mkdir -p /home/myuser4/workspace
sudo chown -R myuser4:myuser4 /home/myuser4/workspace
sudo chmod 777 /home/myuser4/workspace
sudo usermod -aG sudo myuser4

################################################################################################
sudo adduser testuser --gecos "testuser,RoomNumber,WorkPhone,HomePhone" --disabled-password
echo "testuser:asdf1234%" | sudo chpasswd
sudo mkdir -p /home/testuser/workspace
sudo chown -R testuser:testuser /home/testuser/workspace
sudo chmod 777 /home/testuser/workspace
sudo usermod -aG sudo testuser
################################################################################################

#sudo chmod 777 /home/myuser1/workspace
#sudo chmod 777 /home/myuser2/workspace
#sudo chmod 777 /home/myuser3/workspace



# 7. pull docker image
sudo docker pull mycares/ubuntu-gpu-vnc:latest


# 8. Docker run 
------------------------------------------------------------------------------------------------
# run container ip: 130.216.238.74
#sudo docker run -d --privileged --gpus all --name gpud74myuser1 -e USER=myuser1 -e PASSWORD=pass1 -e HTTP_PASSWORD=pass1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud74myuser2 -e USER=myuser2 -e PASSWORD=pass2 -e HTTP_PASSWORD=pass2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud74myuser3 -e USER=myuser3 -e PASSWORD=pass3 -e HTTP_PASSWORD=pass3 -p 8445:8443 -p 6082:80 -p 5902:5900 -p 8091:8089 -v /dev/shm:/dev/shm -v /home/myuser3/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest

sudo docker run -d --privileged --gpus all --name gpud74myuser1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud74myuser2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------
# run container ip: 130.216.238.175
#sudo docker run -d --privileged --gpus all --name gpud175myuser1 -e USER=myuser1 -e PASSWORD=pass1 -e HTTP_PASSWORD=pass1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud175myuser2 -e USER=myuser2 -e PASSWORD=pass2 -e HTTP_PASSWORD=pass2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud175myuser3 -e USER=myuser3 -e PASSWORD=pass3 -e HTTP_PASSWORD=pass3 -p 8445:8443 -p 6082:80 -p 5902:5900 -p 8091:8089 -v /dev/shm:/dev/shm -v /home/myuser3/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest

sudo docker run -d --privileged --gpus all --name gpud175myuser1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud175myuser2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------
# run container ip: 130.216.239.4
# sudo docker run -d --privileged --gpus all --name gpud4myuser1 -e USER=myuser1 -e PASSWORD=pass1 -e HTTP_PASSWORD=pass1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
# sudo docker run -d --privileged --gpus all --name gpud4myuser2 -e USER=myuser2 -e PASSWORD=pass2 -e HTTP_PASSWORD=pass2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
# sudo docker run -d --privileged --gpus all --name gpud4myuser3 -e USER=myuser3 -e PASSWORD=pass3 -e HTTP_PASSWORD=pass3 -p 8445:8443 -p 6082:80 -p 5902:5900 -p 8091:8089 -v /dev/shm:/dev/shm -v /home/myuser3/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest

sudo docker run -d --privileged --gpus all --name gpud4myuser1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud4myuser2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------
# run container ip: 130.216.238.223
#sudo docker run -d --privileged --gpus all --name gpud223myuser1 -e USER=myuser1 -e PASSWORD=pass1 -e HTTP_PASSWORD=pass1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud223myuser2 -e USER=myuser2 -e PASSWORD=pass2 -e HTTP_PASSWORD=pass2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud223myuser3 -e USER=myuser3 -e PASSWORD=pass3 -e HTTP_PASSWORD=pass3 -p 8445:8443 -p 6082:80 -p 5902:5900 -p 8091:8089 -v /dev/shm:/dev/shm -v /home/myuser3/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest

sudo docker run -d --privileged --gpus all --name gpud223myuser1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud223myuser2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
------------------------------------------------------------------------------------------------




------------------------------------------------------------------------------------------------
# run container ip: 130.216.239.152
#sudo docker run -d --privileged --gpus all --name gpud152myuser1 -e USER=myuser1 -e PASSWORD=pass1 -e HTTP_PASSWORD=pass1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud152myuser2 -e USER=myuser2 -e PASSWORD=pass2 -e HTTP_PASSWORD=pass2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud152myuser3 -e USER=myuser3 -e PASSWORD=pass3 -e HTTP_PASSWORD=pass3 -p 8445:8443 -p 6082:80 -p 5902:5900 -p 8091:8089 -v /dev/shm:/dev/shm -v /home/myuser3/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest

sudo docker run -d --privileged --gpus all --name gpud152myuser1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud152myuser2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud152myuser3 -p 8445:8443 -p 6082:80 -p 5902:5900 -p 8091:8089 -v /media/myuser1/Seagate\ Expansion\ Drive/:/extdrive -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------
# run container ip: 130.216.238.140
#sudo docker run -d --privileged --gpus all --name gpud140myuser1 -e USER=myuser1 -e PASSWORD=pass1 -e HTTP_PASSWORD=pass1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud140myuser2 -e USER=myuser2 -e PASSWORD=pass2 -e HTTP_PASSWORD=pass2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud140myuser3 -e USER=myuser3 -e PASSWORD=pass3 -e HTTP_PASSWORD=pass3 -p 8445:8443 -p 6082:80 -p 5902:5900 -p 8091:8089 -v /dev/shm:/dev/shm -v /home/myuser3/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest

sudo docker run -d --privileged --gpus all --name gpud140myuser1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud140myuser2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud140myuser3 -p 8445:8443 -p 6082:80 -p 5902:5900 -p 8091:8089 -v /dev/shm:/dev/shm -v /home/myuser3/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud140myuser4 -p 8446:8443 -p 6083:80 -p 5903:5900 -p 8092:8089 -v /dev/shm:/dev/shm -v /home/myuser4/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------
# run container ip: 130.216.238.16
#sudo docker run -d --privileged --gpus all --name gpud16myuser1 -e USER=myuser1 -e PASSWORD=pass1 -e HTTP_PASSWORD=pass1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud16myuser2 -e USER=myuser2 -e PASSWORD=pass2 -e HTTP_PASSWORD=pass2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud16myuser3 -e USER=myuser3 -e PASSWORD=pass3 -e HTTP_PASSWORD=pass3 -p 8445:8443 -p 6082:80 -p 5902:5900 -p 8091:8089 -v /dev/shm:/dev/shm -v /home/myuser3/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest

sudo docker run -d --privileged --gpus all --name gpud16myuser1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud16myuser2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------
# run container ip: 130.216.239.30
#sudo docker run -d --privileged --gpus all --name gpud16myuser1 -e USER=myuser1 -e PASSWORD=pass1 -e HTTP_PASSWORD=pass1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud16myuser2 -e USER=myuser2 -e PASSWORD=pass2 -e HTTP_PASSWORD=pass2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
#sudo docker run -d --privileged --gpus all --name gpud16myuser3 -e USER=myuser3 -e PASSWORD=pass3 -e HTTP_PASSWORD=pass3 -p 8445:8443 -p 6082:80 -p 5902:5900 -p 8091:8089 -v /dev/shm:/dev/shm -v /home/myuser3/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest

sudo docker run -d --privileged --gpus all --name gpud30myuser1 -p 8443:8443 -p 6080:80 -p 5900:5900 -p 8089:8089 -v /dev/shm:/dev/shm -v /home/myuser1/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud30myuser2 -p 8444:8443 -p 6081:80 -p 5901:5900 -p 8090:8089 -v /dev/shm:/dev/shm -v /home/myuser2/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud30myuser3 -p 8445:8443 -p 6082:80 -p 5902:5900 -p 8091:8089 -v /dev/shm:/dev/shm -v /home/myuser3/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
sudo docker run -d --privileged --gpus all --name gpud30myuser4 -p 8446:8443 -p 6083:80 -p 5903:5900 -p 8092:8089 -v /dev/shm:/dev/shm -v /home/myuser4/workspace:/workspace --restart unless-stopped mycares/ubuntu-gpu-vnc:latest
------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------
130.216.238.182


------------------------------------------------------------------------------------------------

# Workspace folder for each user (ie, ‘/home/myuser1/workspace’ from the host computer) is mapped to ‘/workspace’ in the docker container. 
# This means users can use the workspace to share files between host computer and its container. 
# It’ll be useful to feed dataset to the container or get the trained model from the container.
# Also, miniconda environment is setup for the python development, so users can easily have their own environments (ie, for detection, segmentation, nlp).

# ID/Password - myuser1/pass1
# web_vnc - ipaddress:6080
# web_vscode - ipaddress:8443
# web_terminal - ipaddress:8089
# vpn - ipaddress:5900

# ID/Password - myuser2/pass2
# web_vnc - ipaddress:6081
# web_vscode - ipaddress:8444
# web_terminal - ipaddress:8090
# vpn - ipaddress:5901

# ---------------------------------------------------------------------------------------------------------------------------------------------
# update docker image
sudo docker login
sudo docker build . -t ubuntu-gpu-vnc:latest
sudo docker tag ubuntu-gpu-vnc:latest mycares/ubuntu-gpu-vnc:latest
sudo docker push mycares/ubuntu-gpu-vnc:latest

# ---------------------------------------------------------------------------------------------------------------------------------------------
# Portainer
# Portainer is an open-source management UI for Docker, including Docker Swarm environment. Portainer makes it easier for you to manage your Docker containers, it allows you to manage containers, images, networks, and volumes from the web-based Portainer dashboard.
sudo docker volume create portainer_data
sudo docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce


# stop docker container
sudo docker stop gpud152myuser1
sudo docker stop gpud152myuser2

# remove docker container 
sudo docker rm gpud152myuser2













sudo docker run --rm -it --privileged --gpus all --name gpudtest1 -p 8446:8443 -p 6083:80 -p 5903:5900 -p 8092:8089 -v /dev/shm:/dev/shm mycares/ubuntu-gpu-vnc:latest






# delete user
sudo userdel username
sudo rm -r /home/username



# conda install 
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
chmod +x Miniconda3-latest-Linux-x86_64.sh
./Miniconda3-latest-Linux-x86_64.sh -b
~/miniconda3/bin/conda init
